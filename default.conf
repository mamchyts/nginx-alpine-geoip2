server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost;

    index index.php;

    root /var/www/html/public;

    # Stay secure
    #
    # a) don't allow PHP in folders allowing file uploads
    location ~* /var/.*\.php(/|$) {
        return 404;
    }
    # b) Prevent clients from accessing hidden files (starting with a dot)
    # Access to `/.well-known/` is allowed.
    # https://www.mnot.net/blog/2010/04/07/well-known
    # https://tools.ietf.org/html/rfc5785
    location ~* /\.(?!well-known/) {
        deny all;
        log_not_found off;
        access_log off;
    }
    # c) Prevent clients from accessing to backup/config/source files
    location ~* (?:\.(?:bak|conf(ig)?|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
        deny all;
    }

    location / {
        add_header "X-UA-Compatible" "IE=edge";
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Authorization, Accept';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Authorization, Accept' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;

        set $ruri $request_uri;

        # regex to split $uri to $fastcgi_script_name and $fastcgi_path
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # Check that the PHP script exists before passing it
        try_files $fastcgi_script_name =404;
        include /etc/nginx/fastcgi_params;

        # Bypass the fact that try_files resets $fastcgi_path_info
        # see: http://trac.nginx.org/nginx/ticket/321
        set $path_info $fastcgi_path_info;
        fastcgi_param PATH_INFO $path_info;

        # Activate these, if using Symlinks and opcache
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param REQUEST_URI $ruri;

        # Geoip2
        fastcgi_param GEOIP2_CITY $geoip2_data_city_name;
        fastcgi_param GEOIP2_POSTAL_CODE $geoip2_data_postal_code;
        fastcgi_param GEOIP2_STATE_NAME $geoip2_data_state_name;
        fastcgi_param GEOIP2_STATE_CODE $geoip2_data_state_code;
        fastcgi_param GEOIP2_COUNTRY_CODE $geoip2_data_country_code;
        fastcgi_param GEOIP2_COUNTRY_NAME $geoip2_data_country_name;
        fastcgi_param GEOIP2_REGION $geoip2_data_region_iso;
        fastcgi_param GEOIP2_REGION_NAME $geoip2_data_region_name;

        fastcgi_pass fpm:9000;

        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }
}
